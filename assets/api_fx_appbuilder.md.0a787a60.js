import{_ as s,c as a,o as n,a as l}from"./app.3f6d5495.js";const h=JSON.parse('{"title":"应用建造 (FlandreAppBuilder)","description":"","frontmatter":{},"headers":[{"level":2,"title":"属性","slug":"属性","link":"#属性","children":[]},{"level":2,"title":"添加插件","slug":"添加插件","link":"#添加插件","children":[]},{"level":2,"title":"添加适配器","slug":"添加适配器","link":"#添加适配器","children":[]}],"relativePath":"api/fx/appbuilder.md","lastUpdated":1670095480000}'),e={name:"api/fx/appbuilder.md"},p=l(`<h1 id="应用建造-flandreappbuilder" tabindex="-1">应用建造 (FlandreAppBuilder) <a class="header-anchor" href="#应用建造-flandreappbuilder" aria-hidden="true">#</a></h1><p>一个应用建造者实例是一切的开始，其提供了加入适配器、插件的能力，同时提供依赖注入容器的服务集合可供手动注入。</p><nav class="table-of-contents"><ul><li><a href="#属性">属性</a></li><li><a href="#添加插件">添加插件</a></li><li><a href="#添加适配器">添加适配器</a></li></ul></nav><h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-hidden="true">#</a></h2><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki one-dark-pro" tabindex="0"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">IServiceCollection</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Services</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">get</span><span style="color:#ABB2BF;">; }</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>依赖注入容器的服务集合，通过它可以方便注册与控制自己想要的服务。</p><h2 id="添加插件" tabindex="-1">添加插件 <a class="header-anchor" href="#添加插件" aria-hidden="true">#</a></h2><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki one-dark-pro" tabindex="0"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">FlandreAppBuilder</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">UsePlugin</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">TPlugin</span><span style="color:#ABB2BF;">&gt;()</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">where</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">TPlugin</span><span style="color:#ABB2BF;"> : </span><span style="color:#E5C07B;">Plugin</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>添加一个不带配置的插件。</p><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki one-dark-pro" tabindex="0"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">FlandreAppBuilder</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">UsePlugin</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">TPlugin</span><span style="color:#ABB2BF;">&gt;(</span><span style="color:#C678DD;">object</span><span style="color:#ABB2BF;">? </span><span style="color:#E5C07B;">config</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">where</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">TPlugin</span><span style="color:#ABB2BF;"> : </span><span style="color:#E5C07B;">Plugin</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>添加一个带配置的插件。</p><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki one-dark-pro" tabindex="0"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">FlandreAppBuilder</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">UsePlugin</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">TPlugin</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">TPluginConfig</span><span style="color:#ABB2BF;">&gt;(</span><span style="color:#E5C07B;">TPluginConfig</span><span style="color:#ABB2BF;">? </span><span style="color:#E5C07B;">config</span><span style="color:#ABB2BF;">) </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">where</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">TPlugin</span><span style="color:#ABB2BF;"> : </span><span style="color:#E5C07B;">Plugin</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>添加一个带配置的插件，并使用泛型限定插件配置类型。</p><h2 id="添加适配器" tabindex="-1">添加适配器 <a class="header-anchor" href="#添加适配器" aria-hidden="true">#</a></h2><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki one-dark-pro" tabindex="0"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">FlandreAppBuilder</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">UseAdapter</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">IAdapter</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">adapter</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>添加一个适配器实例。</p>`,16),o=[p];function r(c,t,i,B,d,u){return n(),a("div",null,o)}const b=s(e,[["render",r]]);export{h as __pageData,b as default};
