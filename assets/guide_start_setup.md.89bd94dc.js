import{_ as s,c as a,o as n,a as p}from"./app.502e5375.js";const h=JSON.parse('{"title":"从模板创建项目","description":"","frontmatter":{},"headers":[],"relativePath":"guide/start/setup.md","lastUpdated":1677953005000}'),l={name:"guide/start/setup.md"},e=p(`<h1 id="从模板创建项目" tabindex="-1">从模板创建项目 <a class="header-anchor" href="#从模板创建项目" aria-hidden="true">#</a></h1><p>Flandre 的开发至少需要 .NET 6 SDK，确保你已经正常安装完毕。如果不确定自己安装的是什么版本，可以使用 <code>dotnet --info</code> 命令查看。</p><p>我们提供了一个模板项目，可以帮助你快速上手 Flandre 的开发。<a href="https://github.com/FlandreDevs/Templates" target="_blank" rel="noreferrer">仓库在这里</a></p><p>首先，打开终端（如 PowerShell），键入以下命令：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#B392F0;">dotnet</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Flandre.Templates</span></span>
<span class="line"></span></code></pre><pre class="shiki github-light vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">dotnet</span><span style="color:#24292E;"> </span><span style="color:#032F62;">new</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Flandre.Templates</span></span>
<span class="line"></span></code></pre></div><p>创建一个名为 <code>MyFirstFlandreApp</code> 的新项目：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#B392F0;">dotnet</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">flandre</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-o</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">MyFirstFlandreApp</span></span>
<span class="line"></span></code></pre><pre class="shiki github-light vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">dotnet</span><span style="color:#24292E;"> </span><span style="color:#032F62;">new</span><span style="color:#24292E;"> </span><span style="color:#032F62;">flandre</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-o</span><span style="color:#24292E;"> </span><span style="color:#032F62;">MyFirstFlandreApp</span></span>
<span class="line"></span></code></pre></div><p>接下来，你需要结合自身的需求，挑选一个合适的平台适配器 (Adapter) 并加入到应用中。你可以在<a href="./../../ecosystem/">适配器列表</a>中寻找一个合适的。</p><p>在新创建项目中的 <code>Program.cs</code>，加入新的适配器：</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki github-dark vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 安装一个适配器，并添加在这里。</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">config</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">YourAdapterConfig</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#E1E4E8;">builder.</span><span style="color:#B392F0;">AddAdapter</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">YourAdapter</span><span style="color:#E1E4E8;">(config));</span></span>
<span class="line"></span></code></pre><pre class="shiki github-light vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 安装一个适配器，并添加在这里。</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">config</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">YourAdapterConfig</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">builder.</span><span style="color:#6F42C1;">AddAdapter</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">YourAdapter</span><span style="color:#24292E;">(config));</span></span>
<span class="line"></span></code></pre></div><p>接下来，你将了解到和 Flandre 进行基础交互的知识。</p>`,11),o=[e];function t(c,r,d,i,y,E){return n(),a("div",null,o)}const g=s(l,[["render",t]]);export{h as __pageData,g as default};
